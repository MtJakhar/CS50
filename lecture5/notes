Lecture 5 Data Structures

Data Structures
Data structures- forms of organization in memory.

Stacks and Queues

Queues- an abstract data structure,

Queue properties
FIFO- first in first out
Enqueued- item can join the line or queue.
Dequeued- item leaves the queue once it reaches the front of the line.

Stacks
stack properties
LIFO- last in first out.
push- an action which places something on top of a stack.
pop- removing from the top of the stack

Resizing Arrays

array is a block of contiguous memory.

Linked Lists

Linked List- Unlike arrays, which store elements in contiguous memory locations, linked lists use dynamic memory allocation, allowing nodes to be scattered in memory. This makes linked lists more flexible in terms of memory management and insertion/deletion operations.

Trees

Binary search trees are another data structure that can be used to store data more efficiently such that it can be searched and retrieved.

Dictionaries

Dictionaries, like actual book-form dictionaries that have a word and a definition, have a key and a value.

The holy grail of algorithmic time complexity is O(1)
or constant time. That is, the ultimate is for access to be instantaneous.

Hashing and hash tables

Hashing is the idea of taking a value and being able to output a value that becomes a shortcut

A hash function is an algorithm that reduces a larger value to something small and predictable. Generally, this function rakes in an item you wish to add to your table, and returns an integer representing the array index in which the item should be placed.

has table is a combination of both arrays and linked lists.

Collisions are when you add values to the hash table, and something already exists at the hashed location. In the above, collisions are simply appended to the end of the list.

Tries

Tries are another form of data structure.
Tries are always searchable in constant time.
One downside to Tries is that they tend to take up a large amount of memory. Notice that we need
nodes just to store Toad!
